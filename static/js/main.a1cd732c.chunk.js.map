{"version":3,"sources":["app/routes.js","features/topics/topicsSlice.js","features/quizzes/quizzesSlice.js","features/cards/cardsSlice.js","components/NewQuizForm.js","data/icons.js","components/NewTopicForm.js","features/topics/Topics.js","features/topics/Topic.js","features/cards/Card.js","features/quizzes/Quiz.js","features/quizzes/Quizzes.js","app/App.js","app/store.js","index.js"],"names":["ROUTES","newQuizRoute","quizRoute","id","quizzesRoute","newTopicRoute","topicRoute","topicsRoute","topics","createSlice","name","initialState","reducers","addTopic","state","action","payload","icon","quizIds","addQuizIds","topicId","quizId","push","selectTopics","actions","quizzes","addQuiz","selectQuiz","cards","addCard","selectCards","NewQuizForm","useState","setName","setCards","setTopicId","history","useHistory","useSelector","dispatch","useDispatch","updateCardState","index","side","value","newCards","slice","onSubmit","e","preventDefault","length","cardIds","forEach","card","cardId","uuidv4","addQuizForTopicIdThunk","onChange","currentTarget","placeholder","Object","values","map","topic","className","front","back","onClick","filter","i","removeCard","concat","ALL_ICONS","url","NewTopicForm","setIcon","type","required","defaultValue","disabled","hidden","Topics","to","src","alt","Topic","useParams","quizzesForTopic","quiz","Card","flipped","setFlipped","Quizzes","App","basename","activeClassName","path","TopicsRoutes","QuizRoutes","match","useRouteMatch","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.a1cd732c.chunk.js","sourcesContent":["const ROUTES = {\n  newQuizRoute: () => \"/quizzes/new\",\n  quizRoute: (id) => `/quizzes/${id}`,\n  quizzesRoute: () => \"/quizzes\",\n  newTopicRoute: () => \"/topics/new\",\n  topicRoute: (id) => `/topics/${id}`,\n  topicsRoute: () => \"/topics\",\n};\n\nexport default ROUTES;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst topics = createSlice({\n    name: 'topics',\n    initialState: {\n        topics: {}\n    },\n    reducers: {\n        addTopic(state, action) {\n            const { id, name, icon } = action.payload;\n            state.topics[id] = {\n                id: id,\n                name: name,\n                icon: icon,\n                quizIds: [],\n            }\n        },\n        addQuizIds(state, action) {\n            const { topicId, quizId } = action.payload;\n            if (!topicId) {\n                return;\n            }\n            state.topics[topicId].quizIds.push(quizId)\n        }\n    }\n});\n\nexport const selectTopics = state => state.topics.topics;\nexport const { addTopic, addQuizIds } = topics.actions;\nexport default topics.reducer;","import { createSlice } from '@reduxjs/toolkit';\nimport { addQuizIds } from '../topics/topicsSlice';\n\nconst quizzes = createSlice({\n    name: 'quizzes',\n    initialState: {\n        quizzes: {}\n    },\n\n    reducers: {\n        addQuiz: (state, action) => {\n            const { id } = action.payload;\n            state.quizzes[id] = action.payload;\n        }\n    }\n});\n\nexport const addQuizForTopicIdThunk = (payload) => {\n    const { topicId, id} = payload\n    return (dispatch) => {\n        dispatch(addQuizIds({ topicId: topicId, quizId: id}))\n        dispatch(quizzes.actions.addQuiz(payload))\n    };\n};\n\nexport const selectQuiz = (state) => state.quizzes.quizzes;\n\nexport const { addQuiz } = () => quizzes.actions\n\nexport default quizzes.reducer","import { createSlice } from \"@reduxjs/toolkit\" \n\nconst cards = createSlice({\n    name: 'cards',\n    initialState: {\n        cards: {}\n    },\n    reducers: {\n        addCard: (state, action) => {\n            state.cards = {[action.payload.id]: action.payload}\n        }\n    }\n})\n\nexport const { addCard } = cards.actions;\n\nexport const selectCards = (state) => state.cards.cards\n\nexport default cards.reducer","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ROUTES from \"../app/routes\";\nimport { selectTopics } from '../features/topics/topicsSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addQuizForTopicIdThunk } from '../features/quizzes/quizzesSlice';\nimport { addCard } from '../features/cards/cardsSlice';\n\nexport default function NewQuizForm() {\n  const [name, setName] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  const [topicId, setTopicId] = useState(\"\");\n  const history = useHistory();\n  const topics = useSelector(selectTopics);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.length === 0) {\n      return;\n    }\n    // create the new cards here and add each card's id to cardIds\n    const cardIds = []\n\n    cards.forEach((card) => {\n      let cardId = uuidv4();\n      cardIds.push(cardId);\n      dispatch(addCard({ ...card, id: cardId }));\n    })\n    // create the new quiz here\n    let quizId = uuidv4();\n\n    dispatch(\n      addQuizForTopicIdThunk({\n        name: name,\n        topicId: topicId,\n        cardIds: cardIds,\n        id: quizId\n      })\n    )\n\n    history.push(ROUTES.quizzesRoute());\n  };\n\n  const addCardInputs = (e) => {\n    e.preventDefault();\n    setCards(cards.concat({ front: \"\", back: \"\" }));\n  };\n\n  const removeCard = (e, index) => {\n    e.preventDefault();\n    setCards(cards.filter((card, i) => index !== i));\n  };\n\n  const updateCardState = (index, side, value) => {\n    const newCards = cards.slice();\n    newCards[index][side] = value;\n    setCards(newCards);\n  };\n\n  return (\n    <section>\n      <h1>Create a new quiz</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          id=\"quiz-name\"\n          value={name}\n          onChange={(e) => setName(e.currentTarget.value)}\n          placeholder=\"Quiz Title\"\n        />\n        <select\n          id=\"quiz-topic\"\n          onChange={(e) => setTopicId(e.currentTarget.value)}\n          placeholder=\"Topic\"\n        >\n          <option value=\"\">Topic</option>\n          {Object.values(topics).map((topic) => (\n            <option key={topic.id} value={topic.id}>\n              {topic.name}\n            </option>\n          ))}\n        </select>\n        {cards.map((card, index) => (\n          <div key={index} className=\"card-front-back\">\n            <input\n              id={`card-front-${index}`}\n              value={cards[index].front}\n              onChange={(e) =>\n                updateCardState(index, \"front\", e.currentTarget.value)\n              }\n              placeholder=\"Front\"\n            />\n\n            <input\n              id={`card-back-${index}`}\n              value={cards[index].back}\n              onChange={(e) =>\n                updateCardState(index, \"back\", e.currentTarget.value)\n              }\n              placeholder=\"Back\"\n            />\n\n            <button\n              onClick={(e) => removeCard(e, index)}\n              className=\"remove-card-button\"\n            >\n              Remove Card\n            </button>\n          </div>\n        ))}\n        <div className=\"actions-container\">\n          <button onClick={addCardInputs}>Add a Card</button>\n          <button>Create Quiz</button>\n        </div>\n      </form>\n    </section>\n  );\n}\n","export const BOOK_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/book.svg\";\nexport const BALLOON_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/balloon.svg\";\nexport const BIRD_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/bird.svg\";\nexport const CALENDAR_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/calendar.svg\";\nexport const CLOVER_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/clover.svg\";\nexport const CRAYONS_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/crayons.svg\";\nexport const DATA_FLOW_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/data-flow.svg\";\nexport const FENCE_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/fence.svg\";\nexport const GRILL_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/grill.svg\";\nexport const HAND_DRILL_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/hand-drill.svg\";\nexport const HAT_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/hat.svg\";\nexport const INTERNET_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/internet.svg\";\nexport const LADYBUG_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/ladybug.svg\";\nexport const LEAVES_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/leaves.svg\";\nexport const MEDICINE_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/medicine.svg\";\nexport const NEST_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/nest.svg\";\nexport const SHUTTLECOCK_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/shuttlecock.svg\";\nexport const SPADE_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/spade.svg\";\nexport const STATISTICS_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/statistics.svg\";\nexport const SUN_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/sun.svg\";\nexport const TREE_ICON =\n  \"https://static-assets.codecademy.com/skillpaths/react-redux/redux-quiz-app/tree.svg\";\n\nexport const ALL_ICONS = [\n  {\n    url: BOOK_ICON,\n    name: \"Book\",\n  },\n  {\n    url: BALLOON_ICON,\n    name: \"Balloon\",\n  },\n  {\n    url: BIRD_ICON,\n    name: \"Bird\",\n  },\n  {\n    url: CALENDAR_ICON,\n    name: \"Calendar\",\n  },\n  {\n    url: CLOVER_ICON,\n    name: \"Clover\",\n  },\n  {\n    url: CRAYONS_ICON,\n    name: \"Crayons\",\n  },\n  {\n    url: DATA_FLOW_ICON,\n    name: \"Data\",\n  },\n  {\n    url: FENCE_ICON,\n    name: \"Fence\",\n  },\n  {\n    url: GRILL_ICON,\n    name: \"Grill\",\n  },\n  {\n    url: HAND_DRILL_ICON,\n    name: \"Hand\",\n  },\n  {\n    url: HAT_ICON,\n    name: \"Hat\",\n  },\n  {\n    url: INTERNET_ICON,\n    name: \"Internet\",\n  },\n  {\n    url: LADYBUG_ICON,\n    name: \"Ladybug\",\n  },\n  {\n    url: LEAVES_ICON,\n    name: \"Leaves\",\n  },\n  {\n    url: MEDICINE_ICON,\n    name: \"Medicine\",\n  },\n  {\n    url: NEST_ICON,\n    name: \"Nest\",\n  },\n  {\n    url: SHUTTLECOCK_ICON,\n    name: \"Shuttlecock\",\n  },\n  {\n    url: SPADE_ICON,\n    name: \"Spade\",\n  },\n  {\n    url: STATISTICS_ICON,\n    name: \"Statistics\",\n  },\n  {\n    url: SUN_ICON,\n    name: \"Sun\",\n  },\n  {\n    url: TREE_ICON,\n    name: \"Tree\",\n  },\n];\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ROUTES from \"../app/routes\";\nimport { ALL_ICONS } from \"../data/icons\";\nimport { addTopic } from \"../features/topics/topicsSlice\"\nimport { useDispatch } from 'react-redux';\n\nexport default function NewTopicForm() {\n  const [name, setName] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n  const history = useHistory();\n  const dispatch = useDispatch()\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.length === 0) {\n      return;\n    }\n    dispatch(addTopic({\n      name: name,\n      id: uuidv4(),\n      icon: icon,\n    }))\n    history.push(ROUTES.topicsRoute());\n  };\n\n  return (\n    <section>\n      <form onSubmit={handleSubmit}>\n        <h1 className=\"center\">Create a new topic</h1>\n        <div className=\"form-section\">\n          <input\n            id=\"topic-name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.currentTarget.value)}\n            placeholder=\"Topic Name\"\n          />\n          <select\n            onChange={(e) => setIcon(e.currentTarget.value)}\n            required\n            defaultValue=\"default\"\n          >\n            <option value=\"default\" disabled hidden>\n              Choose an icon\n            </option>\n            {ALL_ICONS.map(({ name, url }) => (\n              <option key={url} value={url}>\n                {name}\n              </option>\n            ))}\n          </select>\n        </div>\n        <button className=\"center\">Add Topic</button>\n      </form>\n    </section>\n  );\n}","import NewTopicForm from \"../../components/NewTopicForm\";\nimport { Link } from \"react-router-dom\";\nimport ROUTES from \"../../app/routes\";\nimport { selectTopics } from '../topics/topicsSlice';\nimport { useSelector } from 'react-redux'\n\nexport default function Topics() {\n  const topics = useSelector(selectTopics);\n\n  return (\n    <section className=\"center\">\n      <h1>Topics</h1>\n        <ul className=\"topics-list\">\n          {Object.values(topics).map((topic) => (\n            <li className=\"topic\" key={topic.id}>\n              <Link to={ROUTES.newQuizRoute()} className=\"topic-link\">\n                <div className=\"topic-container\">\n                  <img src={topic.icon} alt=\"\" />\n                  <div className=\"text-content\">\n                    <h2>{topic.name}</h2>\n                    <p>{topic.quizIds.length} Quizzes</p>\n                  </div>\n                </div>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      <Link\n        to={ROUTES.newTopicRoute()}\n        className=\"button create-new-topic-button\"\n      >\n        Create New Topic\n      </Link>\n    </section>\n  );\n}","import NewTopicForm from \"../../components/NewTopicForm\";\nimport { Link, useParams } from \"react-router-dom\";\nimport ROUTES from \"../../app/routes\";\nimport { useSelector } from \"react-redux\";\nimport selectTopics from '../topics/topicsSlice'\n\nexport default function Topic() {\n  const topics = useSelector(selectTopics()); // replace this with a call to your selector to select all the topics in state\n  const quizzes = {}; // replace this with a call to your selector to select all the quizzes in state\n  let { topicId } = useParams();\n  const topic = topics[topicId];\n  const quizzesForTopic = topic.quizIds.map((quizId) => quizzes[quizId]);\n\n  return (\n    <section>\n      <img src={topic.icon} alt=\"\" className=\"topic-icon\" /> */}\n      <h1>Topic: {topic.name}</h1>\n      <ul className=\"quizzes-list\">\n        {quizzesForTopic.map((quiz) => (\n          <li className=\"quiz\" key={quiz.id}>\n            <Link to={ROUTES.quizRoute(quiz.id)}>{quiz.name}</Link>\n          </li>\n        ))}\n      </ul>\n      <Link to=\"/quizzes/new\" className=\"button center\">\n        Create a New Quiz\n      </Link>\n    </section>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { selectCards } from \"./cardsSlice\";\n\nexport default function Card({ id }) {\n  const cards = useSelector(selectCards); // replace this with a call to your selector to get all the cards in state\n  const card = cards[id];\n  const [flipped, setFlipped] = useState(false);\n\n  return (\n    <li>\n      <button className=\"card\" onClick={(e) => setFlipped(!flipped)}>\n        {flipped ? card.back : card.front}\n      </button>\n    </li>\n  );\n}\n","import { Link, useParams } from \"react-router-dom\";\nimport Card from \"../cards/Card\";\nimport ROUTES from \"../../app/routes\";\nimport { useSelector } from \"react-redux\";\nimport { selectQuiz } from '../quizzes/quizzesSlice'\n\nexport default function Topic() {\n  const quizzes = useSelector(selectQuiz); // replace this with a call to your selector to get all the quizzes in state\n  let { quizId } = useParams();\n  const quiz = quizzes[quizId];\n\n  return (\n    <section>\n      <h1>{quiz.name}</h1>\n      <ul className=\"cards-list\">\n        {quiz.cardIds.map((id) => (\n          <Card key={id} id={id} />\n        ))}\n      </ul>\n      <Link to={ROUTES.newQuizRoute()} className=\"button center\">\n        Create a New Quiz\n      </Link>\n    </section>\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport ROUTES from \"../../app/routes\";\nimport { useSelector } from 'react-redux';\nimport { selectQuiz } from \"./quizzesSlice\";\n\nexport default function Quizzes() {\n  const quizzes = useSelector(selectQuiz); // replace this with a call to your selector to get all the quizzes in state\n  return (\n    <section className=\"center\">\n      <h1>Quizzes</h1>\n      <ul className=\"quizzes-list\">\n        {Object.values(quizzes).map((quiz) => (\n          <Link key={quiz.id} to={ROUTES.quizRoute(quiz.id)}>\n            <li className=\"quiz\">{quiz.name}</li>\n          </Link>\n        ))}\n      </ul>\n      <Link to={ROUTES.newQuizRoute()} className=\"button\">\n        Create New Quiz\n      </Link>\n    </section>\n  );\n}","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport NewQuizForm from \"../components/NewQuizForm\";\nimport NewTopicForm from \"../components/NewTopicForm\";\nimport Topics from \"../features/topics/Topics\";\nimport Topic from \"../features/topics/Topic\";\nimport Quiz from \"../features/quizzes/Quiz\";\nimport Quizzes from \"../features/quizzes/Quizzes\";\nimport ROUTES from \"./routes\";\n\nexport default function App() {\n  return (\n    <Router basename=\"flashcards\">\n      <nav>\n        <ul>\n          <li>\n            <NavLink to={ROUTES.topicsRoute()} activeClassName=\"active\">\n              Topics\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to={ROUTES.quizzesRoute()} activeClassName=\"active\">\n              Quizzes\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to={ROUTES.newQuizRoute()} activeClassName=\"active\">\n              New Quiz\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n\n      <Switch>\n        <Route path=\"/topics\">\n          <TopicsRoutes />\n        </Route>\n        <Route path=\"/quizzes\">\n          <QuizRoutes />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nfunction TopicsRoutes() {\n  let match = useRouteMatch();\n\n  return (\n    <>\n      <Switch>\n        <Route path={`${match.path}/new`}>\n          <NewTopicForm />\n        </Route>\n        <Route path={`${match.path}/:topicId`}>\n          <Topic />\n        </Route>\n        <Route path={`${match.path}`}>\n          <Topics />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nfunction QuizRoutes() {\n  let match = useRouteMatch();\n\n  return (\n    <>\n      <Switch>\n        <Route path={`${match.path}/new`}>\n          <NewQuizForm />\n        </Route>\n        <Route path={`${match.path}/:quizId`}>\n          <Quiz />\n        </Route>\n        <Route path={`${match.path}`}>\n          <Quizzes />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport topics from \"../features/topics/topicsSlice\";\nimport quizzes from '../features/quizzes/quizzesSlice';\nimport cards from \"../features/cards/cardsSlice\";\n\n\nexport default configureStore({\n  reducer: {\n    topics: topics,\n    quizzes: quizzes,\n    cards: cards,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./app/App\";\nimport store from \"./app/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}